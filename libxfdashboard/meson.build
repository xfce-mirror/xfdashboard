libxfdashboard_headers = [
  'action-button.h',
  'actor.h',
  'animation.h',
  'application-button.h',
  'application-database.h',
  'applications-menu-model.h',
  'applications-search-provider.h',
  'applications-view.h',
  'application-tracker.h',
  'background.h',
  'binding.h',
  'bindings-pool.h',
  'box-layout.h',
  'button.h',
  'click-action.h',
  'collapse-box.h',
  'core.h',
  'css-selector.h',
  'debug.h',
  'desktop-app-info-action.h',
  'desktop-app-info.h',
  'drag-action.h',
  'drop-action.h',
  'dynamic-table-layout.h',
  'emblem-effect.h',
  'fill-box-layout.h',
  'focusable.h',
  'focus-manager.h',
  'gradient-color.h',
  'image-content.h',
  'label.h',
  'libxfdashboard.h',
  'live-window.h',
  'live-window-simple.h',
  'live-workspace.h',
  'model.h',
  'outline-effect.h',
  'plugin.h',
  'plugin-settings.h',
  'plugins-manager.h',
  'popup-menu.h',
  'popup-menu-item-button.h',
  'popup-menu-item.h',
  'popup-menu-item-separator.h',
  'quicklaunch.h',
  'scaled-table-layout.h',
  'scrollbar.h',
  'search-manager.h',
  'search-provider.h',
  'search-result-container.h',
  'search-result-set.h',
  'search-view.h',
  'settings.h',
  'stage.h',
  'stage-interface.h',
  'stylable.h',
  'text-box.h',
  'theme-animation.h',
  'theme-css.h',
  'theme-effects.h',
  'theme.h',
  'theme-layout.h',
  'toggle-button.h',
  'tooltip-action.h',
  'transition-group.h',
  'types.h',
  'utils.h',
  'view.h',
  'view-manager.h',
  'viewpad.h',
  'view-selector.h',
  'window-content.h',
  'windows-view.h',
  'window-tracker-backend.h',
  'window-tracker.h',
  'window-tracker-monitor.h',
  'window-tracker-window.h',
  'window-tracker-workspace.h',
  'workspace-selector.h',
]

libxfdashboard_headers += configure_file(
  input: 'version.h.in',
  output: 'version.h',
  configuration: {
    'LIBXFDASHBOARD_MAJOR_VERSION': version_parts[0],
    'LIBXFDASHBOARD_MINOR_VERSION': version_parts[1],
    'LIBXFDASHBOARD_MICRO_VERSION': version_parts[2],
  },
)

libxfdashboard_sources = [
  'action-button.c',
  'actor.c',
  'animation.c',
  'application-button.c',
  'application-database.c',
  'applications-menu-model.c',
  'applications-search-provider.c',
  'applications-view.c',
  'application-tracker.c',
  'background.c',
  'binding.c',
  'bindings-pool.c',
  'box-layout.c',
  'button.c',
  'click-action.c',
  'collapse-box.c',
  'core.c',
  'css-selector.c',
  'debug.c',
  'desktop-app-info-action.c',
  'desktop-app-info.c',
  'drag-action.c',
  'drop-action.c',
  'dynamic-table-layout.c',
  'emblem-effect.c',
  'fill-box-layout.c',
  'focusable.c',
  'focus-manager.c',
  'gradient-color.c',
  'image-content.c',
  'label.c',
  'live-window.c',
  'live-window-simple.c',
  'live-workspace.c',
  'model.c',
  'outline-effect.c',
  'plugin.c',
  'plugin-settings.c',
  'plugins-manager.c',
  'popup-menu.c',
  'popup-menu-item-button.c',
  'popup-menu-item.c',
  'popup-menu-item-separator.c',
  'quicklaunch.c',
  'scaled-table-layout.c',
  'scrollbar.c',
  'search-manager.c',
  'search-provider.c',
  'search-result-container.c',
  'search-result-set.c',
  'search-view.c',
  'settings.c',
  'stage.c',
  'stage-interface.c',
  'stylable.c',
  'text-box.c',
  'theme-animation.c',
  'theme.c',
  'theme-css.c',
  'theme-effects.c',
  'theme-layout.c',
  'toggle-button.c',
  'tooltip-action.c',
  'transition-group.c',
  'utils.c',
  'view.c',
  'view-manager.c',
  'viewpad.c',
  'view-selector.c',
  'window-content.c',
  'windows-view.c',
  'window-tracker-backend.c',
  'window-tracker.c',
  'window-tracker-monitor.c',
  'window-tracker-window.c',
  'window-tracker-workspace.c',
  'workspace-selector.c',
]

libxfdashboard_sources += gnome.mkenums(
  'enums',
  c_template: 'enums.c.template',
  h_template: 'enums.h.template',
  sources: libxfdashboard_headers,
)

libxfdashboard_sources += gnome.genmarshal(
  'marshal',
  sources: 'marshal.list',
  prefix: '_xfdashboard_marshal',
  internal: true,
  install_header: false,
)

if x11.found()
  libxfdashboard_headers += [
    'x11' / 'window-content-x11.h',
    'x11' / 'window-tracker-backend-x11.h',
    'x11' / 'window-tracker-monitor-x11.h',
    'x11' / 'window-tracker-window-x11.h',
    'x11' / 'window-tracker-workspace-x11.h',
    'x11' / 'window-tracker-x11.h',
  ]

  libxfdashboard_sources += [
    'x11' / 'window-content-x11.c',
    'x11' / 'window-tracker-backend-x11.c',
    'x11' / 'window-tracker-monitor-x11.c',
    'x11' / 'window-tracker-window-x11.c',
    'x11' / 'window-tracker-workspace-x11.c',
    'x11' / 'window-tracker-x11.c',
  ]
endif

if clutter_gdk.found()
  libxfdashboard_headers += [
    'gdk' / 'window-tracker-backend-gdk.h',
  ]

  libxfdashboard_sources += [
    'gdk' / 'window-tracker-backend-gdk.c',
  ]
endif

install_headers(
  libxfdashboard_headers,
  subdir: 'xfdashboard' / 'libxfdashboard',
)

libxfdashboard_version = '0'
libxfdashboard_so_version = '@0@.10100.0'.format(libxfdashboard_version)

libxfdashboard_deps = [
  clutter,
  clutter_cogl,
  clutter_gdk,
  cogl,
  garcon,
  gio,
  gio_unix,
  glib,
  gtk,
  libwnck,
  libxfce4ui,
  libxfce4util,
  x11,
  xcomposite,
  xdamage,
  xinerama,
]

libxfdashboard = library(
  'xfdashboard',
  [
    libxfdashboard_headers,
    libxfdashboard_sources,
  ],
  version: libxfdashboard_version,
  soversion: libxfdashboard_so_version,
  c_args: [
    '-DLIBXFDASHBOARD_COMPILATION=1',
    '-DG_LOG_DOMAIN="@0@"'.format('xfdashboard'),
  ],
  include_directories: [
    include_directories('..'),
  ],
  dependencies: libxfdashboard_deps,
  install: true,
)

pkgconfig.generate(
  libraries: [
    libxfdashboard,
  ],
  version: meson.project_version(),
  name: 'xfdashboard',
  filebase: 'libxfdashboard',
  description: 'Library for xfdashboard',
  subdirs: [
    'xfdashboard',
  ],
  variables: [
    'exec_prefix=@0@'.format('${prefix}'),
  ],
  install_dir: get_option('prefix') / get_option('libdir') / 'pkgconfig',
)

libxfdashboard_dep = declare_dependency(
  dependencies: libxfdashboard_deps,
  link_with: libxfdashboard,
)
